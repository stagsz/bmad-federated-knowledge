bmad_config:
  version: "2.0"
  local_knowledge:
    core_data: ./.bmad-fks-core/core-data
    templates: ./.bmad-fks-core/templates
    workflows: ./.bmad-fks-core/workflows
  federated_knowledge:
    org_standards:
      repo: https://github.com/goldbergyoni/nodebestpractices.git
      branch: master
      local_cache: ./.bmad-fks-cache/org-standards
      sync_policy: daily
      priority: 1
      metadata:
        description: Organization-wide shared knowledge and standards (using Node.js best practices repo as example)
        maintainer: platform-team@company.com
        tags:
          - standards
          - organization
          - nodejs
    industry_templates:
      repo: https://github.com/cookiecutter/cookiecutter.git
      branch: main
      local_cache: ./.bmad-fks-cache/industry
      sync_policy: weekly
      priority: 0
      filters:
        include:
          - "*"
        exclude:
          - "*.tmp"
          - "*.log"
      metadata:
        description: Industry best practices and templates
        maintainer: bmad-community
        tags:
          - templates
          - best-practices
  federated_settings:
    cache_root: ./bmad-cache
    max_cache_size: 1GB
    sync_timeout: 300
    retry_attempts: 3
    parallel_sync: true
    conflict_resolution: priority
  knowledge_sources:
    user_profiles:
      type: database
      priority: 0
      connection_ref: my-supabase
      query: SELECT * FROM profiles WHERE active = true
    knowledge_base:
      type: database
      priority: 0
      connection_ref: my-supabase
      query: SELECT * FROM knowledge_items
    all_profiles:
      type: database
      priority: 0
      connection_ref: my-supabase
      query: SELECT * FROM profiles ORDER BY created_at DESC
  connections:
    my-supabase:
      type: supabase
      connection_string: postgresql://postgres:YOUR_PASSWORD_HERE@db.YOUR_PROJECT_REF.supabase.co:5432/postgres